/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.7).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.UserModel;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-08-16T02:49:07.097Z")

@Api(value = "user", description = "the user API")
public interface UserApi {

    @ApiOperation(value = "Signs a user up.", nickname = "userPost", notes = "", tags={ "user", })
    @ApiResponses(value = { 
            @ApiResponse(code = 200, message = "Success"),
            @ApiResponse(code = 400, message = "Invalid body.")})
    @RequestMapping(value = "/user",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> userPost(@ApiParam(value = "User object to be added to the database" ,required=true )  @Valid @RequestBody UserModel body);


    @ApiOperation(value = "", nickname = "userGet", notes = "", response = UserModel.class, tags={ "user", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = UserModel.class),
        @ApiResponse(code = 404, message = "User with that username not found") })
    @RequestMapping(value = "/user/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<UserModel> userGet(@ApiParam(value = "",required=true) @PathVariable("id") Long userId);

}
